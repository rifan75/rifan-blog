{
  "title": "Which Back End Should I Use As A Front-End Developer?",
  "publishedAt": "2020-08-09",
  "summary": "Choosing a service to store data can be confusing and overwhelming for a front-end developer. This comprehensive guide is a choose your own adventure dive into creating your backend.",
  "image": "/static/images/backend/og.png",
  "body": {
    "raw": "\r\nChoosing a service to store data can be confusing and overwhelming for a front-end developer.\r\nWhat are all these acronyms? Are the Amazon services named strange on purpose? These and many other questions\r\nawait your journey into the back-end.\r\n\r\nAs a front-end developer turned full-stack, I've spent more time than I'd like to admit trying to figure out the backend.\r\nBecause the backend is harder to _visualize_, I struggled to understand how the pieces fit together. Luckily, I soon found\r\nout I wasn't alone. There's a support group when confused front-end engineers meet called Twitter.\r\n\r\nConsider this article a \"choose your own adventure\" piece. I'll ask questions about your requirements\r\nand then present a few options. Before we can begin our journey, I must first explain the basics. You can\r\nalso jump to the [list of services](/blog/backend#list-of-services) directly.\r\n\r\n## Table of Contents\r\n\r\n- [Backend Basics](/blog/backend#backend-basics)\r\n- [Do You Even Need a Database?](/blog/backend#do-you-even-need-a-database)\r\n- [Low Code Solutions](/blog/backend#low-code-solutions)\r\n- [Terms To Understand](/blog/backend#terms-to-understand)\r\n  - [SQL / NoSQL](/blog/backend#sql--nosql)\r\n  - [GraphQL / REST](/blog/backend#graphql--rest)\r\n  - [Authentication / Authorization](/blog/backend#authentication--authorization)\r\n  - [Hosted / Self-Hosted](/blog/backend#hosted--self-hosted)\r\n  - [Serverless](/blog/backend#serverless)\r\n  - [Data Modeling](/blog/backend#data-modeling)\r\n- [Levels of Abstraction](/blog/backend#levels-of-abstraction)\r\n- [List of Services](/blog/backend#list-of-services)\r\n  - [Backend (as a Service)](/blog/backend#backend-as-a-service)\r\n    - [Supabase](/blog/backend#supabase)\r\n    - [Hasura](/blog/backend#hasura)\r\n  - [Build Your Own Backend](/blog/backend#build-your-own-backend)\r\n    - [Prisma](/blog/backend#prisma)\r\n- [Should You Use a CMS?](/blog/backend#should-you-use-a-cms)\r\n- [Starting From Scratch](/blog/backend#starting-from-scratch)\r\n- [Conclusion / Resources](/blog/backend#conclusion--resources)\r\n\r\n## Backend Basics\r\n\r\nWhat is this scary place, **the back-end?** You can boil it down to this:\r\n\r\n- You need a place to store data ([database](https://dataguide.prisma.io/intro/what-are-databases))\r\n- You need a method of retrieving the data ([API](https://en.wikipedia.org/wiki/Application_programming_interface))\r\n\r\nAs a front-end engineer, you've probably worked with APIs before. They allow you to fetch data from some database, somewhere.\r\nOn a long enough timeline, you'll eventually need to build your own API or\r\nwork with an existing codebase that has a back-end. This brings us to our first question.\r\n\r\n## Do You Even Need a Database?\r\n\r\nYou need a place to store data, right? Here are some questions to consider:\r\n\r\n- Can the data live alongside the code?\r\n- Can the data be tracked with source control?\r\n- Do non-technical people need to modify the data?\r\n- Do you need different levels of access?\r\n\r\nIf you can store your data with your code in [source control](https://aws.amazon.com/devops/source-control),\r\nyou might be fine using [Markdown](https://guides.github.com/features/mastering-markdown/)\r\nwith [git](https://git-scm.com/) – that's what [this blog](https://github.com/leerob/leerob.io) uses.\r\nIt's also worth mentioning you _could_ use JSON files as a pseudo-database if you fall into this category.\r\n\r\nHowever, you're likely reading this article because **you need a database**. Before we start learning about how you can create\r\nyour own backend, you might also consider a low-code solution.\r\n\r\n## Low Code Solutions\r\n\r\nSince you're a front-end developer, you might be able to utilize a low code solution.\r\nThese low code tools are arguably the fastest way to get access to some remote data.\r\n\r\nCommon examples include [Google Sheets](https://github.com/franciscop/use-spreadsheet) or [Airtable](https://www.gatsbyjs.org/packages/gatsby-source-airtable/)\r\nas a database. There are other services that provide an [API abstraction](https://nocodeapi.com/) on a variety of data sources.\r\n\r\n<ProsCard\r\n  title=\"low code\"\r\n  pros={[\r\n    'You are very familiar with spreadsheets',\r\n    'You only have a basic understanding of web development',\r\n    'You want the quickest solution possible',\r\n    'You need to collaborate with many people on data entry'\r\n  ]}\r\n/>\r\n\r\n<ConsCard\r\n  title=\"low code\"\r\n  cons={[\r\n    'Higher probability of needing to change services at scale',\r\n    'Some low code tools require paid plans'\r\n  ]}\r\n/>\r\n\r\n## Terms To Understand\r\n\r\nOkay, so you need a database and it's going to require code.\r\nFirst, I need to explain some terms you'll likely run into.\r\n\r\n### SQL / NoSQL\r\n\r\nA SQL database contains [relational data](https://dataguide.prisma.io/intro/comparing-database-types#relational-databases-working-with-tables-as-a-standard-solution-to-organize-well-structured-dataauthentication). Consider a social media site with a table for `users` and `posts`.\r\nEvery user represents a row in the `users` table.\r\nEach user can have many different `posts`. There is a **relation** between a post and the user.\r\nThese relations makes it easy to look up different pieces of data through queries.\r\n\r\nNoSQL databases are (generally) document-oriented. Unlike a SQL database, there are no tables or rows.\r\nInstead, you store data in documents, which get organized into collections.\r\nFor example, in [Firestore](https://firebase.google.com/docs/firestore/data-model) each document contains a set of key-value pairs.\r\nThis is a great option for large collections of small documents.\r\n\r\n### GraphQL / REST\r\n\r\nAPIs allow programs to talk to each other. [REST](https://restfulapi.net/) and [GraphQL](https://graphql.org/learn/) are simply two different ways to fetch data. For example, here's a\r\n`GET` request to fetch the number of views for a blog post.\r\n\r\n```bash\r\n$ curl https://leerob.io/api/page-views?id=databases\r\n\r\n{ \"total\": 1234 }\r\n```\r\n\r\nGraphQL is an open-source [specification](https://graphql.github.io/graphql-spec/June2018/) for how to query your APIs.\r\nConverting the previous example from REST to a GraphQL query might look like this.\r\n\r\n```graphql\r\n{\r\n  post(id: \"databases\") {\r\n    views\r\n  }\r\n}\r\n```\r\n\r\nIf you want to learn more, [here's an excellent resource](https://hasura.io/learn/graphql/intro-graphql/graphql-vs-rest/).\r\n\r\n### Authentication / Authorization\r\n\r\n[Authentication](https://dataguide.prisma.io/postgresql/authentication-and-authorization/intro-to-authn-and-authz#what-are-authentication-and-authorization) verifies who a user is, while [authorization](https://dataguide.prisma.io/postgresql/authentication-and-authorization/intro-to-authn-and-authz#what-are-authentication-and-authorization) verifies what they have access to.\r\nYou'll commonly see this abbreviated as AuthN (Authentication) and AuthZ (Authorization).\r\n\r\nIf you're building any application that has users or requires limiting access to certain areas, you'll need to consider both of these.\r\n\r\n### Hosted / Self-Hosted\r\n\r\nYour database can either be hosted (managed by someone else) or self-hosted.\r\nWhen backend services are open-source, it generally means there is an option to self-host.\r\n\r\nIf you don't want to deal with infrastructure, use a hosted service.\r\n\r\n### Serverless\r\n\r\nServerless allows you to write and deploy code without the hassle of worrying about the underlying infrastructure.\r\nYou only pay when your code runs. With a traditional server, it's always running.\r\nIn general, serverless should have less maintenance. There are, however, [tradeoffs](https://www.serverless.com/blog/when-why-not-use-serverless).\r\n\r\nIt's worth mentioning how you deploy your front-end might impact which back-end service you choose.\r\nFor example, if you use [Next.js](/blog/learn-nextjs) and server-side rendering, each page generates a [serverless function](https://www.pubnub.com/blog/what-is-a-serverless-function/).\r\nAt a large enough scale, you'll run into issues where there are too many open connections to your database. A common solution\r\nfor this is connection pooling. For more information, check out [Prisma's deployment documentation](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/deployment).\r\n\r\n### Data Modeling\r\n\r\nWhen learning about databases, you might hear terms like [one-to-many](<https://en.wikipedia.org/wiki/One-to-many_(data_model)>)\r\nand [many-to-many](<https://en.wikipedia.org/wiki/Many-to-many_(data_model)>). These are ways of modeling your database relationships.\r\n[Database normalization](https://dataguide.prisma.io/intro/intro-to-schemas) is\r\nhow you organize a database into tables and columns.\r\n\r\n## Levels of Abstraction\r\n\r\nEvery situation is unique. There are _many_ tools that exist to solve the same problem. By understanding what you're looking for,\r\nit will help you choose the right solution. First, let's understand _what_ you're trying to build.\r\n\r\n- Are you building this backend for yourself?\r\n- Will other people need to use it / support it?\r\n- Are you trying to build a [Minimum Viable Product (MVP)](https://en.wikipedia.org/wiki/Minimum_viable_product)?\r\n\r\nPersonally, I like to experiment with new technologies when I'm creating personal projects. If I'm\r\npicking a tool for my day job, I'll likely default to one that's well-adopted in the industry and has\r\nrobust support. There's more control picking a backend when you're a solo-founder building the entire\r\ntech stack yourself. As you introduce other engineers into the mix, things get more complicated.\r\n\r\nIf you need something fast, you'll want a higher-level abstraction. These services typically provide a client or API\r\nout of the box that reduces the amount of boilerplate code you need to write. This is commonly referred to as\r\nautomating the [CRUD (Create, read, update and delete)](https://en.wikipedia.org/wiki/Create,_read,_update_and_delete) portion of your backend.\r\n\r\nLet's assume you want something more high-level, ideally with a website or interface to manage your data.\r\nIf you want complete control, you might consider [building your own](/blog/backend#build-your-own-backend).\r\n\r\n## List of Services\r\n\r\nI've crowdsourced a list of services you might consider using. Below, I'll give further insights into a few services I know well.\r\nThe reality is that each service listed here has its own tradeoffs. Hopefully this gives you a high-level overview to research more.\r\nIt's also worth mentioning the service you already know well might be your best choice.\r\nHere's some questions to consider.\r\n\r\n- Does your backend need to be built on open-source technology?\r\n- What level of vendor lock-in are you comfortable with?\r\n- Are there are security considerations your company/client has?\r\n- How much do you want to build yourself vs. rely on a service?\r\n- Do you need social login? (Sign in with Google, Facebook, etc.)\r\n- Do you have an existing database you're trying to improve access to?\r\n\r\n### Backend (as a Service)\r\n\r\nThese are (typically) managed services that automate the creation of code based on your [database schema](https://www.youtube.com/watch?v=3BZz8R7mqu0).\r\nYou might see these referred to as \"in a box\" solutions. For example, Hasura provides a GraphQL API in a box as part of the platform.\r\n\r\n- ✅ &nbsp;Yes, or included directly in the platform\r\n- ⛔️ &nbsp;Not supported or available\r\n- 🚧 &nbsp;Requires some work\r\n\r\n| Name                                           | Type     | Open Source | Self Hosted Option | AuthN Included | GraphQL |\r\n| ---------------------------------------------- | -------- | ----------- | ------------------ | -------------- | ------- |\r\n| [Firebase](https://firebase.google.com/)       | NoSQL    | ⛔️         | ⛔️                | ✅             | ⛔️     |\r\n| [MongoDB](https://www.mongodb.com/)            | NoSQL    | ✅          | ✅                 | ✅             | ⛔️     |\r\n| [Fauna](https://fauna.com/)                    | NoSQL    | ⛔️         | ⛔️                | ✅             | ✅      |\r\n| [Userbase](https://userbase.com/)              | NoSQL    | ✅          | ✅                 | ✅             | ⛔️     |\r\n| [PlanetScale](https://www.planetscale.com/)    | SQL      | ✅          | ⛔️                | 🚧             | ⛔️     |\r\n| [Hasura](https://hasura.io/)                   | Postgres | ✅          | ✅                 | 🚧             | ✅      |\r\n| [Nhost](https://nhost.io/)                     | Postgres | ✅          | ✅                 | ✅             | ✅      |\r\n| [Supabase](https://supabase.io/)               | Postgres | ✅          | ✅                 | ✅             | ✅      |\r\n| [AWS Amplify](https://aws.amazon.com/amplify/) | Both     | ✅          | ✅                 | ✅             | ✅      |\r\n\r\n### Supabase\r\n\r\nSupabase is an open-source alternative to Firebase. But it's really much more than that. If you want Postgres, you'll want Supabase, hands down. They also have [authentication](https://supabase.com/auth), [storage](https://supabase.com/storage), and support for [GraphQL](https://supabase.com/blog/2021/12/03/pg-graphql).\r\n\r\n<ProsCard\r\n  title=\"Supabase\"\r\n  pros={[\r\n    'You need to launch an application quick',\r\n    'You want authentication included',\r\n    'You need to support social logins',\r\n    'You need real-time data',\r\n    'You want to use Postgres'\r\n  ]}\r\n/>\r\n\r\n<ConsCard\r\n  title=\"Supabase\"\r\n  cons={[\r\n    'You want to use MySQL instead of Postgres',\r\n    `You don't want to bet on an earlier stage company`\r\n  ]}\r\n/>\r\n\r\n### Hasura\r\n\r\nHasura allows you to create an instant GraphQL API based on Postgres. With [Hasura Cloud](https://hasura.io/cloud/), it's easy\r\nto go from an idea to a live API. I love that you can create your database models directly through their console.\r\n\r\nIf you haven't looked at Hasura since they've launched their managed service, give it another look. One of the\r\nissues I had before Hasura Cloud was [cold starts](https://medium.com/faun/on-the-serverless-cold-start-problem-2fc0797da5cc) with the [Heroku](https://heroku.com/) free tier. Hasura Cloud prevents this while remaining\r\non the free tier.\r\n\r\nWhile Hasura generally recommends using Auth0 for authorization, it's possible to [roll your own](https://hasura.io/docs/1.0/graphql/manual/auth/index.html).\r\nIf you want authentication included with Hasura, consider [Nhost](https://nhost.io/).\r\n\r\n<ProsCard\r\n  title=\"Hasura\"\r\n  pros={[\r\n    'You need to launch an application quick',\r\n    'You want to use GraphQL',\r\n    'You need an easy watch to extend an existing service (Remote Schema)',\r\n    `You don't already have a database`\r\n  ]}\r\n/>\r\n\r\n<ConsCard\r\n  title=\"Hasura\"\r\n  cons={[\r\n    `You'll need lots of custom backend logic`,\r\n    'You want authentication included zero-config'\r\n  ]}\r\n/>\r\n\r\n### Build Your Own Backend\r\n\r\nThese are libraries and tools to build your own API and back-end logic. In general, I wouldn't recommend these\r\nfor absolute beginners. Personally, I learn best by _doing_. My entry into back-end development came through\r\nbuilding real applications and trying out different technologies. You want some quick wins at the start so you can\r\nfeel like you're progressing.\r\n\r\nWhen you lose a level of abstraction, there are other pieces you need to consider.\r\n\r\n- How distributed is my userbase?\r\n- How reliable does my database / backend need to be?\r\n- What kind of tooling does the solution provide (for example, [database migrations](https://www.alooma.com/blog/what-is-database-migration))\r\n\r\nIt's also worth mentioning you can use [AWS RDS](https://aws.amazon.com/rds/) to self-host any SQL-based database.\r\nIt's [proven technology](http://boringtechnology.club/) that even has [credits available](https://aws.amazon.com/about-aws/whats-new/2020/02/aws-launches-activate-founders-package/)\r\nfor founder/startups.\r\n\r\n| Name                                                                | Type      | Open Source | Self Hosting? | AuthN Included | GraphQL |\r\n| ------------------------------------------------------------------- | --------- | ----------- | ------------- | -------------- | ------- |\r\n| [AWS DynamoDB](https://aws.amazon.com/dynamodb/)                    | NoSQL     | ✅          | ✅            | ⛔️            | ⛔️     |\r\n| [Prisma](https://prisma.io)                                         | SQL-based | ✅          | ✅            | ⛔️            | ⛔️     |\r\n| [Prisma](https://prisma.io) + [Nexus](https://nexus.js.org/)        | SQL-based | ✅          | ✅            | 🚧             | ✅      |\r\n| [Prisma](https://prisma.io) + [NextAuth](https://next-auth.js.org/) | SQL-based | ✅          | ✅            | ✅             | ⛔️     |\r\n\r\n_Honorable Mentions: Laravel, Rails. I wanted to keep this JavaScript focused._\r\n\r\n### Prisma\r\n\r\nPrisma provides an auto-generated and type-safe query builder based on your database schema. It currently supports PostgreSQL, MySQL, SQL Server, SQLite and MongoDB.\r\n\r\nIf you want to build a GraphQL API with Prisma, you can pair it with [Nexus](https://nexus.js.org/). Nexus has [plug-ins](https://nexus.js.org/docs/api-plugins)\r\nfor authentication / authorization.\r\n\r\n<ProsCard\r\n  title=\"Prisma\"\r\n  pros={[\r\n    'You have an existing database',\r\n    'You want to use TypeScript',\r\n    'You have highly relational data',\r\n    'You want the freedom of choosing any SQL-based solution'\r\n  ]}\r\n/>\r\n\r\n<ConsCard\r\n  title=\"Prisma\"\r\n  cons={[\r\n    `You want a solution that provides the API for you`,\r\n    `You don't want to worry about self-hosting`\r\n  ]}\r\n/>\r\n\r\n## Should You Use a CMS?\r\n\r\nA [Content Management System (CMS)](https://en.wikipedia.org/wiki/Content_management_system)\r\nallows you to manage the creation and modification of your data, which typically includes a database.\r\nFor example, [WordPress](https://wordpress.org/) might use a MySQL database to store the content.\r\nShould you use a CMS or just use a database directly? More questions.\r\n\r\n- Are you dealing with images or document storage?\r\n- Do any non-technical users need to manage the data?\r\n- Do you need to [localize](https://www.w3.org/International/questions/qa-i18n) the data?\r\n- Do you need drafts / previews of content (like blog posts)?\r\n\r\nIf you answered yes to any of those questions, you might want to [explore a CMS](https://bejamas.io/blog/headless-cms/).\r\n\r\n## Starting From Scratch\r\n\r\nSome (usually more experienced) full-stack developers end up wanting full control over their infrastructure and prefer to work directly with databases.\r\nThis typically requires a more fundamental understanding of the back-end. There's entire books on this subject, which include the following list of buzzwords.\r\n\r\n- [Object-relational mappers (ORMs)](https://dataguide.prisma.io/types/relational/comparing-sql-query-builders-and-orms#what-are-orms)\r\n- [Manually sharing / replicating](<https://en.wikipedia.org/wiki/Shard_(database_architecture)>)\r\n- [Scaling instances](https://aws.amazon.com/blogs/database/scaling-your-amazon-rds-instance-vertically-and-horizontally/)\r\n- [Provisioning servers](https://www.redhat.com/en/topics/automation/what-is-provisioning)\r\n- [Transactions](https://documentation.progress.com/output/ua/OpenEdge_latest/aswsp/what-is-a-database-transaction-3f.html) / [ACID](https://en.wikipedia.org/wiki/ACID)\r\n- [Containers](https://www.docker.com/why-docker)\r\n\r\nDon't feel overwhelmed. As front-end developers, we know that we don't need to know _everything_. Both the front-end and back-end are complex, dense areas.\r\nStart small, learn intently, and soon you will be crafting your own APIs with ease.\r\n\r\n## Conclusion / Resources\r\n\r\nWould you change anything? Do you have any resources for learning the back-end? If so, leave a comment below and I'll update this list.\r\n\r\n- [How to Become a Good Backend Engineer (Fundamentals)](https://www.youtube.com/watch?v=V3ZPPPKEipA)\r\n- [What are web servers and how do they work?](https://www.youtube.com/watch?v=JhpUch6lWMw)\r\n- [Best GraphQL Stack for Node.js](https://www.benawad.com/what-is-the-best-graphql-stack-for-nodejs/)\r\n- [GraphQL Code Generator](https://graphql-code-generator.com/)\r\n",
    "code": "var Component=(()=>{var u=Object.create;var i=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var f=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var b=(a,e)=>()=>(e||a((e={exports:{}}).exports,e),e.exports),y=(a,e)=>{for(var r in e)i(a,r,{get:e[r],enumerable:!0})},s=(a,e,r,t)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let o of m(e))!g.call(a,o)&&o!==r&&i(a,o,{get:()=>e[o],enumerable:!(t=p(e,o))||t.enumerable});return a};var w=(a,e,r)=>(r=a!=null?u(f(a)):{},s(e||!a||!a.__esModule?i(r,\"default\",{value:a,enumerable:!0}):r,a)),k=a=>s(i({},\"__esModule\",{value:!0}),a);var h=b((q,l)=>{l.exports=_jsx_runtime});var I={};y(I,{default:()=>S,frontmatter:()=>v});var n=w(h()),v={title:\"Which Back End Should I Use As A Front-End Developer?\",publishedAt:\"2020-08-09\",summary:\"Choosing a service to store data can be confusing and overwhelming for a front-end developer. This comprehensive guide is a choose your own adventure dive into creating your backend.\",image:\"/static/images/backend/og.png\"};function d(a){let e=Object.assign({p:\"p\",em:\"em\",a:\"a\",h2:\"h2\",span:\"span\",ul:\"ul\",li:\"li\",strong:\"strong\",h3:\"h3\",code:\"code\",pre:\"pre\",table:\"table\",thead:\"thead\",tr:\"tr\",th:\"th\",tbody:\"tbody\",td:\"td\"},a.components),{ProsCard:r,ConsCard:t}=e;return t||c(\"ConsCard\",!0,\"89:1-95:3\"),r||c(\"ProsCard\",!0,\"79:1-87:3\"),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.p,{children:`Choosing a service to store data can be confusing and overwhelming for a front-end developer.\\r\nWhat are all these acronyms? Are the Amazon services named strange on purpose? These and many other questions\\r\nawait your journey into the back-end.`}),`\n`,(0,n.jsxs)(e.p,{children:[`As a front-end developer turned full-stack, I've spent more time than I'd like to admit trying to figure out the backend.\\r\nBecause the backend is harder to `,(0,n.jsx)(e.em,{children:\"visualize\"}),`, I struggled to understand how the pieces fit together. Luckily, I soon found\\r\nout I wasn't alone. There's a support group when confused front-end engineers meet called Twitter.`]}),`\n`,(0,n.jsxs)(e.p,{children:[`Consider this article a \"choose your own adventure\" piece. I'll ask questions about your requirements\\r\nand then present a few options. Before we can begin our journey, I must first explain the basics. You can\\r\nalso jump to the `,(0,n.jsx)(e.a,{href:\"/blog/backend#list-of-services\",children:\"list of services\"}),\" directly.\"]}),`\n`,(0,n.jsxs)(e.h2,{id:\"table-of-contents\",children:[(0,n.jsx)(e.a,{className:\"anchor\",href:\"#table-of-contents\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Table of Contents\"]}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"/blog/backend#backend-basics\",children:\"Backend Basics\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"/blog/backend#do-you-even-need-a-database\",children:\"Do You Even Need a Database?\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"/blog/backend#low-code-solutions\",children:\"Low Code Solutions\"})}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.a,{href:\"/blog/backend#terms-to-understand\",children:\"Terms To Understand\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"/blog/backend#sql--nosql\",children:\"SQL / NoSQL\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"/blog/backend#graphql--rest\",children:\"GraphQL / REST\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"/blog/backend#authentication--authorization\",children:\"Authentication / Authorization\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"/blog/backend#hosted--self-hosted\",children:\"Hosted / Self-Hosted\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"/blog/backend#serverless\",children:\"Serverless\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"/blog/backend#data-modeling\",children:\"Data Modeling\"})}),`\n`]}),`\n`]}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"/blog/backend#levels-of-abstraction\",children:\"Levels of Abstraction\"})}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.a,{href:\"/blog/backend#list-of-services\",children:\"List of Services\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.a,{href:\"/blog/backend#backend-as-a-service\",children:\"Backend (as a Service)\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"/blog/backend#supabase\",children:\"Supabase\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"/blog/backend#hasura\",children:\"Hasura\"})}),`\n`]}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.a,{href:\"/blog/backend#build-your-own-backend\",children:\"Build Your Own Backend\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"/blog/backend#prisma\",children:\"Prisma\"})}),`\n`]}),`\n`]}),`\n`]}),`\n`]}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"/blog/backend#should-you-use-a-cms\",children:\"Should You Use a CMS?\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"/blog/backend#starting-from-scratch\",children:\"Starting From Scratch\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"/blog/backend#conclusion--resources\",children:\"Conclusion / Resources\"})}),`\n`]}),`\n`,(0,n.jsxs)(e.h2,{id:\"backend-basics\",children:[(0,n.jsx)(e.a,{className:\"anchor\",href:\"#backend-basics\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Backend Basics\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"What is this scary place, \",(0,n.jsx)(e.strong,{children:\"the back-end?\"}),\" You can boil it down to this:\"]}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[\"You need a place to store data (\",(0,n.jsx)(e.a,{href:\"https://dataguide.prisma.io/intro/what-are-databases\",children:\"database\"}),\")\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"You need a method of retrieving the data (\",(0,n.jsx)(e.a,{href:\"https://en.wikipedia.org/wiki/Application_programming_interface\",children:\"API\"}),\")\"]}),`\n`]}),`\n`,(0,n.jsx)(e.p,{children:`As a front-end engineer, you've probably worked with APIs before. They allow you to fetch data from some database, somewhere.\\r\nOn a long enough timeline, you'll eventually need to build your own API or\\r\nwork with an existing codebase that has a back-end. This brings us to our first question.`}),`\n`,(0,n.jsxs)(e.h2,{id:\"do-you-even-need-a-database\",children:[(0,n.jsx)(e.a,{className:\"anchor\",href:\"#do-you-even-need-a-database\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Do You Even Need a Database?\"]}),`\n`,(0,n.jsx)(e.p,{children:\"You need a place to store data, right? Here are some questions to consider:\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"Can the data live alongside the code?\"}),`\n`,(0,n.jsx)(e.li,{children:\"Can the data be tracked with source control?\"}),`\n`,(0,n.jsx)(e.li,{children:\"Do non-technical people need to modify the data?\"}),`\n`,(0,n.jsx)(e.li,{children:\"Do you need different levels of access?\"}),`\n`]}),`\n`,(0,n.jsxs)(e.p,{children:[\"If you can store your data with your code in \",(0,n.jsx)(e.a,{href:\"https://aws.amazon.com/devops/source-control\",children:\"source control\"}),`,\\r\nyou might be fine using `,(0,n.jsx)(e.a,{href:\"https://guides.github.com/features/mastering-markdown/\",children:\"Markdown\"}),`\\r\nwith `,(0,n.jsx)(e.a,{href:\"https://git-scm.com/\",children:\"git\"}),\" \\u2013 that's what \",(0,n.jsx)(e.a,{href:\"https://github.com/leerob/leerob.io\",children:\"this blog\"}),` uses.\\r\nIt's also worth mentioning you `,(0,n.jsx)(e.em,{children:\"could\"}),\" use JSON files as a pseudo-database if you fall into this category.\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"However, you're likely reading this article because \",(0,n.jsx)(e.strong,{children:\"you need a database\"}),`. Before we start learning about how you can create\\r\nyour own backend, you might also consider a low-code solution.`]}),`\n`,(0,n.jsxs)(e.h2,{id:\"low-code-solutions\",children:[(0,n.jsx)(e.a,{className:\"anchor\",href:\"#low-code-solutions\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Low Code Solutions\"]}),`\n`,(0,n.jsx)(e.p,{children:`Since you're a front-end developer, you might be able to utilize a low code solution.\\r\nThese low code tools are arguably the fastest way to get access to some remote data.`}),`\n`,(0,n.jsxs)(e.p,{children:[\"Common examples include \",(0,n.jsx)(e.a,{href:\"https://github.com/franciscop/use-spreadsheet\",children:\"Google Sheets\"}),\" or \",(0,n.jsx)(e.a,{href:\"https://www.gatsbyjs.org/packages/gatsby-source-airtable/\",children:\"Airtable\"}),`\\r\nas a database. There are other services that provide an `,(0,n.jsx)(e.a,{href:\"https://nocodeapi.com/\",children:\"API abstraction\"}),\" on a variety of data sources.\"]}),`\n`,(0,n.jsx)(r,{title:\"low code\",pros:[\"You are very familiar with spreadsheets\",\"You only have a basic understanding of web development\",\"You want the quickest solution possible\",\"You need to collaborate with many people on data entry\"]}),`\n`,(0,n.jsx)(t,{title:\"low code\",cons:[\"Higher probability of needing to change services at scale\",\"Some low code tools require paid plans\"]}),`\n`,(0,n.jsxs)(e.h2,{id:\"terms-to-understand\",children:[(0,n.jsx)(e.a,{className:\"anchor\",href:\"#terms-to-understand\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Terms To Understand\"]}),`\n`,(0,n.jsx)(e.p,{children:`Okay, so you need a database and it's going to require code.\\r\nFirst, I need to explain some terms you'll likely run into.`}),`\n`,(0,n.jsxs)(e.h3,{id:\"sql--nosql\",children:[(0,n.jsx)(e.a,{className:\"anchor\",href:\"#sql--nosql\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"SQL / NoSQL\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"A SQL database contains \",(0,n.jsx)(e.a,{href:\"https://dataguide.prisma.io/intro/comparing-database-types#relational-databases-working-with-tables-as-a-standard-solution-to-organize-well-structured-dataauthentication\",children:\"relational data\"}),\". Consider a social media site with a table for \",(0,n.jsx)(e.code,{children:\"users\"}),\" and \",(0,n.jsx)(e.code,{children:\"posts\"}),`.\\r\nEvery user represents a row in the `,(0,n.jsx)(e.code,{children:\"users\"}),` table.\\r\nEach user can have many different `,(0,n.jsx)(e.code,{children:\"posts\"}),\". There is a \",(0,n.jsx)(e.strong,{children:\"relation\"}),` between a post and the user.\\r\nThese relations makes it easy to look up different pieces of data through queries.`]}),`\n`,(0,n.jsxs)(e.p,{children:[`NoSQL databases are (generally) document-oriented. Unlike a SQL database, there are no tables or rows.\\r\nInstead, you store data in documents, which get organized into collections.\\r\nFor example, in `,(0,n.jsx)(e.a,{href:\"https://firebase.google.com/docs/firestore/data-model\",children:\"Firestore\"}),` each document contains a set of key-value pairs.\\r\nThis is a great option for large collections of small documents.`]}),`\n`,(0,n.jsxs)(e.h3,{id:\"graphql--rest\",children:[(0,n.jsx)(e.a,{className:\"anchor\",href:\"#graphql--rest\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"GraphQL / REST\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"APIs allow programs to talk to each other. \",(0,n.jsx)(e.a,{href:\"https://restfulapi.net/\",children:\"REST\"}),\" and \",(0,n.jsx)(e.a,{href:\"https://graphql.org/learn/\",children:\"GraphQL\"}),` are simply two different ways to fetch data. For example, here's a\\r\n`,(0,n.jsx)(e.code,{children:\"GET\"}),\" request to fetch the number of views for a blog post.\"]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-bash\",children:(0,n.jsxs)(e.code,{className:\"language-bash code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"$ \",(0,n.jsx)(e.span,{className:\"token function\",children:\"curl\"}),\" https://leerob.io/api/page-views?id\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),`databases\\r\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\\r\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:'\"total\"'}),(0,n.jsx)(e.span,{className:\"token builtin class-name\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token number\",children:\"1234\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\n`]})]})}),`\n`,(0,n.jsxs)(e.p,{children:[\"GraphQL is an open-source \",(0,n.jsx)(e.a,{href:\"https://graphql.github.io/graphql-spec/June2018/\",children:\"specification\"}),` for how to query your APIs.\\r\nConverting the previous example from REST to a GraphQL query might look like this.`]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-graphql\",children:(0,n.jsxs)(e.code,{className:\"language-graphql code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\\r\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token property-query\",children:\"post\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token attr-name\",children:\"id\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:'\"databases\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\\r\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token property\",children:\"views\"}),`\\r\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\\r\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\n`]})]})}),`\n`,(0,n.jsxs)(e.p,{children:[\"If you want to learn more, \",(0,n.jsx)(e.a,{href:\"https://hasura.io/learn/graphql/intro-graphql/graphql-vs-rest/\",children:\"here's an excellent resource\"}),\".\"]}),`\n`,(0,n.jsxs)(e.h3,{id:\"authentication--authorization\",children:[(0,n.jsx)(e.a,{className:\"anchor\",href:\"#authentication--authorization\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Authentication / Authorization\"]}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.a,{href:\"https://dataguide.prisma.io/postgresql/authentication-and-authorization/intro-to-authn-and-authz#what-are-authentication-and-authorization\",children:\"Authentication\"}),\" verifies who a user is, while \",(0,n.jsx)(e.a,{href:\"https://dataguide.prisma.io/postgresql/authentication-and-authorization/intro-to-authn-and-authz#what-are-authentication-and-authorization\",children:\"authorization\"}),` verifies what they have access to.\\r\nYou'll commonly see this abbreviated as AuthN (Authentication) and AuthZ (Authorization).`]}),`\n`,(0,n.jsx)(e.p,{children:\"If you're building any application that has users or requires limiting access to certain areas, you'll need to consider both of these.\"}),`\n`,(0,n.jsxs)(e.h3,{id:\"hosted--self-hosted\",children:[(0,n.jsx)(e.a,{className:\"anchor\",href:\"#hosted--self-hosted\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Hosted / Self-Hosted\"]}),`\n`,(0,n.jsx)(e.p,{children:`Your database can either be hosted (managed by someone else) or self-hosted.\\r\nWhen backend services are open-source, it generally means there is an option to self-host.`}),`\n`,(0,n.jsx)(e.p,{children:\"If you don't want to deal with infrastructure, use a hosted service.\"}),`\n`,(0,n.jsxs)(e.h3,{id:\"serverless\",children:[(0,n.jsx)(e.a,{className:\"anchor\",href:\"#serverless\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Serverless\"]}),`\n`,(0,n.jsxs)(e.p,{children:[`Serverless allows you to write and deploy code without the hassle of worrying about the underlying infrastructure.\\r\nYou only pay when your code runs. With a traditional server, it's always running.\\r\nIn general, serverless should have less maintenance. There are, however, `,(0,n.jsx)(e.a,{href:\"https://www.serverless.com/blog/when-why-not-use-serverless\",children:\"tradeoffs\"}),\".\"]}),`\n`,(0,n.jsxs)(e.p,{children:[`It's worth mentioning how you deploy your front-end might impact which back-end service you choose.\\r\nFor example, if you use `,(0,n.jsx)(e.a,{href:\"/blog/learn-nextjs\",children:\"Next.js\"}),\" and server-side rendering, each page generates a \",(0,n.jsx)(e.a,{href:\"https://www.pubnub.com/blog/what-is-a-serverless-function/\",children:\"serverless function\"}),`.\\r\nAt a large enough scale, you'll run into issues where there are too many open connections to your database. A common solution\\r\nfor this is connection pooling. For more information, check out `,(0,n.jsx)(e.a,{href:\"https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/deployment\",children:\"Prisma's deployment documentation\"}),\".\"]}),`\n`,(0,n.jsxs)(e.h3,{id:\"data-modeling\",children:[(0,n.jsx)(e.a,{className:\"anchor\",href:\"#data-modeling\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Data Modeling\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"When learning about databases, you might hear terms like \",(0,n.jsx)(e.a,{href:\"https://en.wikipedia.org/wiki/One-to-many_(data_model)\",children:\"one-to-many\"}),`\\r\nand `,(0,n.jsx)(e.a,{href:\"https://en.wikipedia.org/wiki/Many-to-many_(data_model)\",children:\"many-to-many\"}),`. These are ways of modeling your database relationships.\\r\n`,(0,n.jsx)(e.a,{href:\"https://dataguide.prisma.io/intro/intro-to-schemas\",children:\"Database normalization\"}),` is\\r\nhow you organize a database into tables and columns.`]}),`\n`,(0,n.jsxs)(e.h2,{id:\"levels-of-abstraction\",children:[(0,n.jsx)(e.a,{className:\"anchor\",href:\"#levels-of-abstraction\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Levels of Abstraction\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Every situation is unique. There are \",(0,n.jsx)(e.em,{children:\"many\"}),` tools that exist to solve the same problem. By understanding what you're looking for,\\r\nit will help you choose the right solution. First, let's understand `,(0,n.jsx)(e.em,{children:\"what\"}),\" you're trying to build.\"]}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"Are you building this backend for yourself?\"}),`\n`,(0,n.jsx)(e.li,{children:\"Will other people need to use it / support it?\"}),`\n`,(0,n.jsxs)(e.li,{children:[\"Are you trying to build a \",(0,n.jsx)(e.a,{href:\"https://en.wikipedia.org/wiki/Minimum_viable_product\",children:\"Minimum Viable Product (MVP)\"}),\"?\"]}),`\n`]}),`\n`,(0,n.jsx)(e.p,{children:`Personally, I like to experiment with new technologies when I'm creating personal projects. If I'm\\r\npicking a tool for my day job, I'll likely default to one that's well-adopted in the industry and has\\r\nrobust support. There's more control picking a backend when you're a solo-founder building the entire\\r\ntech stack yourself. As you introduce other engineers into the mix, things get more complicated.`}),`\n`,(0,n.jsxs)(e.p,{children:[`If you need something fast, you'll want a higher-level abstraction. These services typically provide a client or API\\r\nout of the box that reduces the amount of boilerplate code you need to write. This is commonly referred to as\\r\nautomating the `,(0,n.jsx)(e.a,{href:\"https://en.wikipedia.org/wiki/Create,_read,_update_and_delete\",children:\"CRUD (Create, read, update and delete)\"}),\" portion of your backend.\"]}),`\n`,(0,n.jsxs)(e.p,{children:[`Let's assume you want something more high-level, ideally with a website or interface to manage your data.\\r\nIf you want complete control, you might consider `,(0,n.jsx)(e.a,{href:\"/blog/backend#build-your-own-backend\",children:\"building your own\"}),\".\"]}),`\n`,(0,n.jsxs)(e.h2,{id:\"list-of-services\",children:[(0,n.jsx)(e.a,{className:\"anchor\",href:\"#list-of-services\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"List of Services\"]}),`\n`,(0,n.jsx)(e.p,{children:`I've crowdsourced a list of services you might consider using. Below, I'll give further insights into a few services I know well.\\r\nThe reality is that each service listed here has its own tradeoffs. Hopefully this gives you a high-level overview to research more.\\r\nIt's also worth mentioning the service you already know well might be your best choice.\\r\nHere's some questions to consider.`}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"Does your backend need to be built on open-source technology?\"}),`\n`,(0,n.jsx)(e.li,{children:\"What level of vendor lock-in are you comfortable with?\"}),`\n`,(0,n.jsx)(e.li,{children:\"Are there are security considerations your company/client has?\"}),`\n`,(0,n.jsx)(e.li,{children:\"How much do you want to build yourself vs. rely on a service?\"}),`\n`,(0,n.jsx)(e.li,{children:\"Do you need social login? (Sign in with Google, Facebook, etc.)\"}),`\n`,(0,n.jsx)(e.li,{children:\"Do you have an existing database you're trying to improve access to?\"}),`\n`]}),`\n`,(0,n.jsxs)(e.h3,{id:\"backend-as-a-service\",children:[(0,n.jsx)(e.a,{className:\"anchor\",href:\"#backend-as-a-service\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Backend (as a Service)\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"These are (typically) managed services that automate the creation of code based on your \",(0,n.jsx)(e.a,{href:\"https://www.youtube.com/watch?v=3BZz8R7mqu0\",children:\"database schema\"}),`.\\r\nYou might see these referred to as \"in a box\" solutions. For example, Hasura provides a GraphQL API in a box as part of the platform.`]}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"\\u2705 \\xA0Yes, or included directly in the platform\"}),`\n`,(0,n.jsx)(e.li,{children:\"\\u26D4\\uFE0F \\xA0Not supported or available\"}),`\n`,(0,n.jsx)(e.li,{children:\"\\u{1F6A7} \\xA0Requires some work\"}),`\n`]}),`\n`,(0,n.jsxs)(e.table,{children:[(0,n.jsx)(e.thead,{children:(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.th,{children:\"Name\"}),(0,n.jsx)(e.th,{children:\"Type\"}),(0,n.jsx)(e.th,{children:\"Open Source\"}),(0,n.jsx)(e.th,{children:\"Self Hosted Option\"}),(0,n.jsx)(e.th,{children:\"AuthN Included\"}),(0,n.jsx)(e.th,{children:\"GraphQL\"})]})}),(0,n.jsxs)(e.tbody,{children:[(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:(0,n.jsx)(e.a,{href:\"https://firebase.google.com/\",children:\"Firebase\"})}),(0,n.jsx)(e.td,{children:\"NoSQL\"}),(0,n.jsx)(e.td,{children:\"\\u26D4\\uFE0F\"}),(0,n.jsx)(e.td,{children:\"\\u26D4\\uFE0F\"}),(0,n.jsx)(e.td,{children:\"\\u2705\"}),(0,n.jsx)(e.td,{children:\"\\u26D4\\uFE0F\"})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:(0,n.jsx)(e.a,{href:\"https://www.mongodb.com/\",children:\"MongoDB\"})}),(0,n.jsx)(e.td,{children:\"NoSQL\"}),(0,n.jsx)(e.td,{children:\"\\u2705\"}),(0,n.jsx)(e.td,{children:\"\\u2705\"}),(0,n.jsx)(e.td,{children:\"\\u2705\"}),(0,n.jsx)(e.td,{children:\"\\u26D4\\uFE0F\"})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:(0,n.jsx)(e.a,{href:\"https://fauna.com/\",children:\"Fauna\"})}),(0,n.jsx)(e.td,{children:\"NoSQL\"}),(0,n.jsx)(e.td,{children:\"\\u26D4\\uFE0F\"}),(0,n.jsx)(e.td,{children:\"\\u26D4\\uFE0F\"}),(0,n.jsx)(e.td,{children:\"\\u2705\"}),(0,n.jsx)(e.td,{children:\"\\u2705\"})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:(0,n.jsx)(e.a,{href:\"https://userbase.com/\",children:\"Userbase\"})}),(0,n.jsx)(e.td,{children:\"NoSQL\"}),(0,n.jsx)(e.td,{children:\"\\u2705\"}),(0,n.jsx)(e.td,{children:\"\\u2705\"}),(0,n.jsx)(e.td,{children:\"\\u2705\"}),(0,n.jsx)(e.td,{children:\"\\u26D4\\uFE0F\"})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:(0,n.jsx)(e.a,{href:\"https://www.planetscale.com/\",children:\"PlanetScale\"})}),(0,n.jsx)(e.td,{children:\"SQL\"}),(0,n.jsx)(e.td,{children:\"\\u2705\"}),(0,n.jsx)(e.td,{children:\"\\u26D4\\uFE0F\"}),(0,n.jsx)(e.td,{children:\"\\u{1F6A7}\"}),(0,n.jsx)(e.td,{children:\"\\u26D4\\uFE0F\"})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:(0,n.jsx)(e.a,{href:\"https://hasura.io/\",children:\"Hasura\"})}),(0,n.jsx)(e.td,{children:\"Postgres\"}),(0,n.jsx)(e.td,{children:\"\\u2705\"}),(0,n.jsx)(e.td,{children:\"\\u2705\"}),(0,n.jsx)(e.td,{children:\"\\u{1F6A7}\"}),(0,n.jsx)(e.td,{children:\"\\u2705\"})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:(0,n.jsx)(e.a,{href:\"https://nhost.io/\",children:\"Nhost\"})}),(0,n.jsx)(e.td,{children:\"Postgres\"}),(0,n.jsx)(e.td,{children:\"\\u2705\"}),(0,n.jsx)(e.td,{children:\"\\u2705\"}),(0,n.jsx)(e.td,{children:\"\\u2705\"}),(0,n.jsx)(e.td,{children:\"\\u2705\"})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:(0,n.jsx)(e.a,{href:\"https://supabase.io/\",children:\"Supabase\"})}),(0,n.jsx)(e.td,{children:\"Postgres\"}),(0,n.jsx)(e.td,{children:\"\\u2705\"}),(0,n.jsx)(e.td,{children:\"\\u2705\"}),(0,n.jsx)(e.td,{children:\"\\u2705\"}),(0,n.jsx)(e.td,{children:\"\\u2705\"})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:(0,n.jsx)(e.a,{href:\"https://aws.amazon.com/amplify/\",children:\"AWS Amplify\"})}),(0,n.jsx)(e.td,{children:\"Both\"}),(0,n.jsx)(e.td,{children:\"\\u2705\"}),(0,n.jsx)(e.td,{children:\"\\u2705\"}),(0,n.jsx)(e.td,{children:\"\\u2705\"}),(0,n.jsx)(e.td,{children:\"\\u2705\"})]})]})]}),`\n`,(0,n.jsxs)(e.h3,{id:\"supabase\",children:[(0,n.jsx)(e.a,{className:\"anchor\",href:\"#supabase\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Supabase\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Supabase is an open-source alternative to Firebase. But it's really much more than that. If you want Postgres, you'll want Supabase, hands down. They also have \",(0,n.jsx)(e.a,{href:\"https://supabase.com/auth\",children:\"authentication\"}),\", \",(0,n.jsx)(e.a,{href:\"https://supabase.com/storage\",children:\"storage\"}),\", and support for \",(0,n.jsx)(e.a,{href:\"https://supabase.com/blog/2021/12/03/pg-graphql\",children:\"GraphQL\"}),\".\"]}),`\n`,(0,n.jsx)(r,{title:\"Supabase\",pros:[\"You need to launch an application quick\",\"You want authentication included\",\"You need to support social logins\",\"You need real-time data\",\"You want to use Postgres\"]}),`\n`,(0,n.jsx)(t,{title:\"Supabase\",cons:[\"You want to use MySQL instead of Postgres\",\"You don't want to bet on an earlier stage company\"]}),`\n`,(0,n.jsxs)(e.h3,{id:\"hasura\",children:[(0,n.jsx)(e.a,{className:\"anchor\",href:\"#hasura\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Hasura\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Hasura allows you to create an instant GraphQL API based on Postgres. With \",(0,n.jsx)(e.a,{href:\"https://hasura.io/cloud/\",children:\"Hasura Cloud\"}),`, it's easy\\r\nto go from an idea to a live API. I love that you can create your database models directly through their console.`]}),`\n`,(0,n.jsxs)(e.p,{children:[`If you haven't looked at Hasura since they've launched their managed service, give it another look. One of the\\r\nissues I had before Hasura Cloud was `,(0,n.jsx)(e.a,{href:\"https://medium.com/faun/on-the-serverless-cold-start-problem-2fc0797da5cc\",children:\"cold starts\"}),\" with the \",(0,n.jsx)(e.a,{href:\"https://heroku.com/\",children:\"Heroku\"}),` free tier. Hasura Cloud prevents this while remaining\\r\non the free tier.`]}),`\n`,(0,n.jsxs)(e.p,{children:[\"While Hasura generally recommends using Auth0 for authorization, it's possible to \",(0,n.jsx)(e.a,{href:\"https://hasura.io/docs/1.0/graphql/manual/auth/index.html\",children:\"roll your own\"}),`.\\r\nIf you want authentication included with Hasura, consider `,(0,n.jsx)(e.a,{href:\"https://nhost.io/\",children:\"Nhost\"}),\".\"]}),`\n`,(0,n.jsx)(r,{title:\"Hasura\",pros:[\"You need to launch an application quick\",\"You want to use GraphQL\",\"You need an easy watch to extend an existing service (Remote Schema)\",\"You don't already have a database\"]}),`\n`,(0,n.jsx)(t,{title:\"Hasura\",cons:[\"You'll need lots of custom backend logic\",\"You want authentication included zero-config\"]}),`\n`,(0,n.jsxs)(e.h3,{id:\"build-your-own-backend\",children:[(0,n.jsx)(e.a,{className:\"anchor\",href:\"#build-your-own-backend\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Build Your Own Backend\"]}),`\n`,(0,n.jsxs)(e.p,{children:[`These are libraries and tools to build your own API and back-end logic. In general, I wouldn't recommend these\\r\nfor absolute beginners. Personally, I learn best by `,(0,n.jsx)(e.em,{children:\"doing\"}),`. My entry into back-end development came through\\r\nbuilding real applications and trying out different technologies. You want some quick wins at the start so you can\\r\nfeel like you're progressing.`]}),`\n`,(0,n.jsx)(e.p,{children:\"When you lose a level of abstraction, there are other pieces you need to consider.\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"How distributed is my userbase?\"}),`\n`,(0,n.jsx)(e.li,{children:\"How reliable does my database / backend need to be?\"}),`\n`,(0,n.jsxs)(e.li,{children:[\"What kind of tooling does the solution provide (for example, \",(0,n.jsx)(e.a,{href:\"https://www.alooma.com/blog/what-is-database-migration\",children:\"database migrations\"}),\")\"]}),`\n`]}),`\n`,(0,n.jsxs)(e.p,{children:[\"It's also worth mentioning you can use \",(0,n.jsx)(e.a,{href:\"https://aws.amazon.com/rds/\",children:\"AWS RDS\"}),` to self-host any SQL-based database.\\r\nIt's `,(0,n.jsx)(e.a,{href:\"http://boringtechnology.club/\",children:\"proven technology\"}),\" that even has \",(0,n.jsx)(e.a,{href:\"https://aws.amazon.com/about-aws/whats-new/2020/02/aws-launches-activate-founders-package/\",children:\"credits available\"}),`\\r\nfor founder/startups.`]}),`\n`,(0,n.jsxs)(e.table,{children:[(0,n.jsx)(e.thead,{children:(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.th,{children:\"Name\"}),(0,n.jsx)(e.th,{children:\"Type\"}),(0,n.jsx)(e.th,{children:\"Open Source\"}),(0,n.jsx)(e.th,{children:\"Self Hosting?\"}),(0,n.jsx)(e.th,{children:\"AuthN Included\"}),(0,n.jsx)(e.th,{children:\"GraphQL\"})]})}),(0,n.jsxs)(e.tbody,{children:[(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:(0,n.jsx)(e.a,{href:\"https://aws.amazon.com/dynamodb/\",children:\"AWS DynamoDB\"})}),(0,n.jsx)(e.td,{children:\"NoSQL\"}),(0,n.jsx)(e.td,{children:\"\\u2705\"}),(0,n.jsx)(e.td,{children:\"\\u2705\"}),(0,n.jsx)(e.td,{children:\"\\u26D4\\uFE0F\"}),(0,n.jsx)(e.td,{children:\"\\u26D4\\uFE0F\"})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:(0,n.jsx)(e.a,{href:\"https://prisma.io\",children:\"Prisma\"})}),(0,n.jsx)(e.td,{children:\"SQL-based\"}),(0,n.jsx)(e.td,{children:\"\\u2705\"}),(0,n.jsx)(e.td,{children:\"\\u2705\"}),(0,n.jsx)(e.td,{children:\"\\u26D4\\uFE0F\"}),(0,n.jsx)(e.td,{children:\"\\u26D4\\uFE0F\"})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsxs)(e.td,{children:[(0,n.jsx)(e.a,{href:\"https://prisma.io\",children:\"Prisma\"}),\" + \",(0,n.jsx)(e.a,{href:\"https://nexus.js.org/\",children:\"Nexus\"})]}),(0,n.jsx)(e.td,{children:\"SQL-based\"}),(0,n.jsx)(e.td,{children:\"\\u2705\"}),(0,n.jsx)(e.td,{children:\"\\u2705\"}),(0,n.jsx)(e.td,{children:\"\\u{1F6A7}\"}),(0,n.jsx)(e.td,{children:\"\\u2705\"})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsxs)(e.td,{children:[(0,n.jsx)(e.a,{href:\"https://prisma.io\",children:\"Prisma\"}),\" + \",(0,n.jsx)(e.a,{href:\"https://next-auth.js.org/\",children:\"NextAuth\"})]}),(0,n.jsx)(e.td,{children:\"SQL-based\"}),(0,n.jsx)(e.td,{children:\"\\u2705\"}),(0,n.jsx)(e.td,{children:\"\\u2705\"}),(0,n.jsx)(e.td,{children:\"\\u2705\"}),(0,n.jsx)(e.td,{children:\"\\u26D4\\uFE0F\"})]})]})]}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.em,{children:\"Honorable Mentions: Laravel, Rails. I wanted to keep this JavaScript focused.\"})}),`\n`,(0,n.jsxs)(e.h3,{id:\"prisma\",children:[(0,n.jsx)(e.a,{className:\"anchor\",href:\"#prisma\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Prisma\"]}),`\n`,(0,n.jsx)(e.p,{children:\"Prisma provides an auto-generated and type-safe query builder based on your database schema. It currently supports PostgreSQL, MySQL, SQL Server, SQLite and MongoDB.\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"If you want to build a GraphQL API with Prisma, you can pair it with \",(0,n.jsx)(e.a,{href:\"https://nexus.js.org/\",children:\"Nexus\"}),\". Nexus has \",(0,n.jsx)(e.a,{href:\"https://nexus.js.org/docs/api-plugins\",children:\"plug-ins\"}),`\\r\nfor authentication / authorization.`]}),`\n`,(0,n.jsx)(r,{title:\"Prisma\",pros:[\"You have an existing database\",\"You want to use TypeScript\",\"You have highly relational data\",\"You want the freedom of choosing any SQL-based solution\"]}),`\n`,(0,n.jsx)(t,{title:\"Prisma\",cons:[\"You want a solution that provides the API for you\",\"You don't want to worry about self-hosting\"]}),`\n`,(0,n.jsxs)(e.h2,{id:\"should-you-use-a-cms\",children:[(0,n.jsx)(e.a,{className:\"anchor\",href:\"#should-you-use-a-cms\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Should You Use a CMS?\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"A \",(0,n.jsx)(e.a,{href:\"https://en.wikipedia.org/wiki/Content_management_system\",children:\"Content Management System (CMS)\"}),`\\r\nallows you to manage the creation and modification of your data, which typically includes a database.\\r\nFor example, `,(0,n.jsx)(e.a,{href:\"https://wordpress.org/\",children:\"WordPress\"}),` might use a MySQL database to store the content.\\r\nShould you use a CMS or just use a database directly? More questions.`]}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"Are you dealing with images or document storage?\"}),`\n`,(0,n.jsx)(e.li,{children:\"Do any non-technical users need to manage the data?\"}),`\n`,(0,n.jsxs)(e.li,{children:[\"Do you need to \",(0,n.jsx)(e.a,{href:\"https://www.w3.org/International/questions/qa-i18n\",children:\"localize\"}),\" the data?\"]}),`\n`,(0,n.jsx)(e.li,{children:\"Do you need drafts / previews of content (like blog posts)?\"}),`\n`]}),`\n`,(0,n.jsxs)(e.p,{children:[\"If you answered yes to any of those questions, you might want to \",(0,n.jsx)(e.a,{href:\"https://bejamas.io/blog/headless-cms/\",children:\"explore a CMS\"}),\".\"]}),`\n`,(0,n.jsxs)(e.h2,{id:\"starting-from-scratch\",children:[(0,n.jsx)(e.a,{className:\"anchor\",href:\"#starting-from-scratch\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Starting From Scratch\"]}),`\n`,(0,n.jsx)(e.p,{children:`Some (usually more experienced) full-stack developers end up wanting full control over their infrastructure and prefer to work directly with databases.\\r\nThis typically requires a more fundamental understanding of the back-end. There's entire books on this subject, which include the following list of buzzwords.`}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://dataguide.prisma.io/types/relational/comparing-sql-query-builders-and-orms#what-are-orms\",children:\"Object-relational mappers (ORMs)\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://en.wikipedia.org/wiki/Shard_(database_architecture)\",children:\"Manually sharing / replicating\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://aws.amazon.com/blogs/database/scaling-your-amazon-rds-instance-vertically-and-horizontally/\",children:\"Scaling instances\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://www.redhat.com/en/topics/automation/what-is-provisioning\",children:\"Provisioning servers\"})}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.a,{href:\"https://documentation.progress.com/output/ua/OpenEdge_latest/aswsp/what-is-a-database-transaction-3f.html\",children:\"Transactions\"}),\" / \",(0,n.jsx)(e.a,{href:\"https://en.wikipedia.org/wiki/ACID\",children:\"ACID\"})]}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://www.docker.com/why-docker\",children:\"Containers\"})}),`\n`]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Don't feel overwhelmed. As front-end developers, we know that we don't need to know \",(0,n.jsx)(e.em,{children:\"everything\"}),`. Both the front-end and back-end are complex, dense areas.\\r\nStart small, learn intently, and soon you will be crafting your own APIs with ease.`]}),`\n`,(0,n.jsxs)(e.h2,{id:\"conclusion--resources\",children:[(0,n.jsx)(e.a,{className:\"anchor\",href:\"#conclusion--resources\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Conclusion / Resources\"]}),`\n`,(0,n.jsx)(e.p,{children:\"Would you change anything? Do you have any resources for learning the back-end? If so, leave a comment below and I'll update this list.\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://www.youtube.com/watch?v=V3ZPPPKEipA\",children:\"How to Become a Good Backend Engineer (Fundamentals)\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://www.youtube.com/watch?v=JhpUch6lWMw\",children:\"What are web servers and how do they work?\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://www.benawad.com/what-is-the-best-graphql-stack-for-nodejs/\",children:\"Best GraphQL Stack for Node.js\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://graphql-code-generator.com/\",children:\"GraphQL Code Generator\"})}),`\n`]})]})}function N(a={}){let{wrapper:e}=a.components||{};return e?(0,n.jsx)(e,Object.assign({},a,{children:(0,n.jsx)(d,a)})):d(a)}var S=N;function c(a,e,r){throw new Error(\"Expected \"+(e?\"component\":\"object\")+\" `\"+a+\"` to be defined: you likely forgot to import, pass, or provide it.\"+(r?\"\\nIt\\u2019s referenced in your code at `\"+r+\"` in `D:\\\\Linux_Share\\\\reactapp\\\\rifan-blog\\\\data\\\\blog\\\\_mdx_bundler_entry_point-7cdb536f-ca71-491a-8935-7733080834ef.mdx`\":\"\"))}return k(I);})();\n;return Component;"
  },
  "_id": "blog/backend.mdx",
  "_raw": {
    "sourceFilePath": "blog/backend.mdx",
    "sourceFileName": "backend.mdx",
    "sourceFileDir": "blog",
    "contentType": "mdx",
    "flattenedPath": "blog/backend"
  },
  "type": "Blog",
  "readingTime": {
    "text": "13 min read",
    "minutes": 12.165,
    "time": 729900,
    "words": 2433
  },
  "wordCount": 2435,
  "tweetIds": [],
  "slug": "backend"
}